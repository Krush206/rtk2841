#ifndef __EHCI_PLAT_RTD284X_CONFIG_H__
#define __EHCI_PLAT_RTD284X_CONFIG_H__

#define U2_PHY_SETTING_REVISION     20161219

/////////////////////////////////////////////////////////////////
// U2 Phy Setting
/////////////////////////////////////////////////////////////////

typedef struct {
	unsigned char page;
	unsigned char addr;
}U2_PHY_REG;

U2_PHY_REG u2_phy_reg_table[] =
{
	{0, 0xE0},
	{0, 0xE1},
	{0, 0xE2},
	{0, 0xE3},
	{0, 0xE4},
	{0, 0xE5},
	{0, 0xE6},
	{0, 0xE7},
	{1, 0xE0},
	{1, 0xE1},
	{1, 0xE2},
	{1, 0xE3},
	{1, 0xE4},
	{1, 0xE5},
	{1, 0xE6},
	{1, 0xE7},
	{0, 0xF0},
	{0, 0xF1},
	{0, 0xF2},
	{0, 0xF3},
	{0, 0xF4},
	{0, 0xF5},
	{0, 0xF6},
	{0, 0xF7},
};

typedef struct {
    int port1;
    unsigned char addr;
    unsigned char val;
}U2_PHY_REGISTER;

/////////////////////////////////////////////
// for TOP port 1/2
U2_PHY_REGISTER u2_phy_setting[] =
{
    {1, 0xE0, 0x0f},
    {2, 0xE0, 0x0f},
    {1, 0XE1, 0x18},
    {2, 0XE1, 0x18},
    {1, 0xE2, 0x4d},
    {2, 0xE2, 0x4d},
    {1, 0xE3, 0xcd},
    {2, 0xE3, 0xcd},
    {1, 0xE5, 0x63},
    {2, 0xE5, 0x63},
    {1, 0xF4, 0xdb},
    {2, 0xF4, 0xdb},
    {1, 0xE6, 0x53},
    {2, 0xE6, 0x53},
    {1, 0xF4, 0x9b}, //page 0
    {2, 0xF4, 0x9b}, //page 0
    {1, 0xE4, 0x6c},
    {2, 0xE4, 0x6c},
    {1, 0xE7, 0xa1},
    {2, 0xE7, 0xa1},
    {1, 0xF4, 0xbb}, // page 1
    {1, 0xE0, 0x23},
    {1, 0xE0, 0x27},
    {2, 0xF4, 0xbb},
    {2, 0xE0, 0x23},
    {2, 0xE0, 0x27},
    {1, 0xF4, 0x9b}, //page 0
    {2, 0xF4, 0x9b},
    {1, 0xE4, 0x7c}, // disconnect level. bit[7:4]
    {2, 0xE4, 0x7c},
    {1, 0xE7, 0x61},
    {2, 0xE7, 0x61},
    {1, 0xE6, 0x01},
    {2, 0xE6, 0x01},
    {1, 0xF0, 0xfc},
    {2, 0xF0, 0xfc},
    {1, 0xF1, 0x88},
    {2, 0xF1, 0x88},
    {1, 0xF2, 0x00},
    {2, 0xF2, 0x00},
    {1, 0xF3, 0x31},
    {2, 0xF3, 0x31},
    {1, 0xF5, 0x15},
    {2, 0xF5, 0x15},
    {1, 0xF6, 0x01},
    {2, 0xF6, 0x01},
    {1, 0xF7, 0x0a},
    {2, 0xF7, 0x0a},
    {1, 0xF4, 0xbb}, // page 1
    {1, 0xE1, 0x70},
    {2, 0xF4, 0xbb}, // page 1
    {2, 0xE1, 0x70},
    {1, 0xE2, 0x00},
    {2, 0xE2, 0x00},
    {1, 0xE3, 0x12},
    {2, 0xE3, 0x12},
    {1, 0xE4, 0x00},
    {2, 0xE4, 0x00},
    {1, 0xE5, 0x0f},
    {2, 0xE5, 0x0f},
    {1, 0xE6, 0x58},
    {2, 0xE6, 0x58},
    {1, 0xE7, 0xe3},
    {2, 0xE7, 0xe3},
    {1, 0xF4, 0xdb}, // page 2
    {2, 0xF4, 0xdb}, // page 2
    {1, 0xE0, 0xa8},
    {2, 0xE0, 0xa8},
    {1, 0xE1, 0x11},
    {2, 0xE1, 0x11},
    {1, 0xE2, 0xe3},
    {2, 0xE2, 0xe3},
    {1, 0xE3, 0xb8},
    {2, 0xE3, 0xb8},
    {1, 0xE4, 0x15},
    {2, 0xE4, 0x15},
    {1, 0xE5, 0x81},
    {2, 0xE5, 0x81},
    {1, 0xF4, 0x9b}, // page 0
    {2, 0xF4, 0x9b}, // page 0
};

#ifdef CONFIG_USB_RTK_USB2_HCD_EX
/////////////////////////////////////////////
// for EX-Top port 1
U2_PHY_REGISTER u2_ex_phy_setting[] =
{
    {1, 0xE0, 0x0f},
    {1, 0XE1, 0x18},
    {1, 0xE2, 0x4d},
    {1, 0xE3, 0xcd},
    {1, 0xE5, 0x63},
    {1, 0xF4, 0xdb},
    {1, 0xE6, 0x53},
    {1, 0xF4, 0x9b},
    {1, 0xE4, 0x6c},
    {1, 0xE7, 0x81},
    {1, 0xF4, 0xbb},
    {1, 0xE0, 0x23},
    {1, 0xE0, 0x27},
    {1, 0xF4, 0x9b},
    {1, 0xE4, 0x7c},
    {1, 0xE7, 0x41},
    {1, 0xE6, 0x01},
    {1, 0xF0, 0xfc},
    {1, 0xF1, 0x88},
    {1, 0xF2, 0x00},
    {1, 0xF3, 0x31},
    {1, 0xF5, 0x15},
    {1, 0xF6, 0x01},
    {1, 0xF7, 0x0a},
    {1, 0xF4, 0xbb},
    {1, 0xE1, 0x70},
    {1, 0xE2, 0x00},
    {1, 0xE3, 0x12},
    {1, 0xE4, 0x00},
    {1, 0xE5, 0x0f},
    {1, 0xE6, 0x58},
    {1, 0xE7, 0xe3},
    {1, 0xF4, 0xdb},
    {1, 0xE0, 0xa8},
    {1, 0xE1, 0x11},
    {1, 0xE2, 0xe3},
    {1, 0xE3, 0xb8},
    {1, 0xE4, 0x15},
    {1, 0xE5, 0x81},
    {1, 0xF4, 0x9b},
};
#endif /* CONFIG_USB_RTK_USB2_HCD_EX */


typedef struct {
    U2_PHY_REGISTER* p_reg_table;
    unsigned int     n_reg;
}U2_PHY_CONFIG;


U2_PHY_CONFIG u2_phy_config = {
        .p_reg_table = u2_phy_setting,
        .n_reg       = sizeof(u2_phy_setting) / sizeof(U2_PHY_REGISTER),
};

#ifdef CONFIG_USB_RTK_USB2_HCD_EX
U2_PHY_CONFIG u2_ex_phy_config = {
        .p_reg_table = u2_ex_phy_setting,
        .n_reg       = sizeof(u2_ex_phy_setting) / sizeof(U2_PHY_REGISTER),
};
#endif /* CONFIG_USB_RTK_USB2_HCD_EX */

#define U2_PHY_CONFIG_COUNT         2
#ifdef CONFIG_USB_RTK_USB2_HCD_EX
#define U2_EX_PHY_CONFIG_COUNT      1
#endif /* CONFIG_USB_RTK_USB2_HCD_EX */

#endif // __EHCI_PLAT_RTD284X_CONFIG_H__
